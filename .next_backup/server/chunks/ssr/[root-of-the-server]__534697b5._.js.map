{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/published-pages-server.ts"],"sourcesContent":["'use server';\n\nimport type { PageContent } from '@/lib/types';\nimport fs from 'fs/promises';\nimport path from 'path';\n\ninterface PublishedPageData {\n  content: PageContent;\n  pageName: string;\n  pageBackgroundColor?: string;\n}\n\nconst jsonFilePath = path.join(process.cwd(), 'src', 'lib', 'published-pages.json');\n\nasync function readPublishedPages(): Promise<Record<string, PublishedPageData>> {\n  try {\n    const fileContent = await fs.readFile(jsonFilePath, 'utf-8');\n    return JSON.parse(fileContent);\n  } catch (error) {\n    // If the file doesn't exist or is empty, return an empty object.\n    if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n      return {};\n    }\n    console.error(\"Error reading published pages file:\", error);\n    return {};\n  }\n}\n\nexport async function getPublishedPage(pageId: string): Promise<PublishedPageData | null> {\n  const pages = await readPublishedPages();\n  return pages[pageId] || null;\n}\n\nexport async function updatePublishedPage(pageId: string, data: PublishedPageData | null) {\n    const pages = await readPublishedPages();\n    \n    if (data === null) {\n      // If data is null, it means we are unpublishing, so remove the page.\n      delete pages[pageId];\n    } else {\n      // Otherwise, add or update the page data.\n      pages[pageId] = data;\n    }\n\n    try {\n        await fs.writeFile(jsonFilePath, JSON.stringify(pages, null, 2), 'utf-8');\n    } catch (error) {\n        console.error(\"Error writing to published pages file:\", error);\n        throw new Error(\"Could not update published pages file.\");\n    }\n}\n"],"names":[],"mappings":";;;;;;AAGA;AACA;;;;;;AAQA,MAAM,eAAe,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,OAAO;AAE5D,eAAe;IACb,IAAI;QACF,MAAM,cAAc,MAAM,qHAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,cAAc;QACpD,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,iEAAiE;QACjE,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACtD,OAAO,CAAC;QACV;QACA,QAAQ,KAAK,CAAC,uCAAuC;QACrD,OAAO,CAAC;IACV;AACF;AAEO,eAAe,iBAAiB,MAAc;IACnD,MAAM,QAAQ,MAAM;IACpB,OAAO,KAAK,CAAC,OAAO,IAAI;AAC1B;AAEO,eAAe,oBAAoB,MAAc,EAAE,IAA8B;IACpF,MAAM,QAAQ,MAAM;IAEpB,IAAI,SAAS,MAAM;QACjB,qEAAqE;QACrE,OAAO,KAAK,CAAC,OAAO;IACtB,OAAO;QACL,0CAA0C;QAC1C,KAAK,CAAC,OAAO,GAAG;IAClB;IAEA,IAAI;QACA,MAAM,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,cAAc,KAAK,SAAS,CAAC,OAAO,MAAM,IAAI;IACrE,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0CAA0C;QACxD,MAAM,IAAI,MAAM;IACpB;AACJ;;;IAtBsB;IAKA;;AALA,+OAAA;AAKA,+OAAA","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-headline.ts"],"sourcesContent":["// src/ai/flows/generate-headline.ts\n'use server';\n\n/**\n * @fileOverview Generates alternative headlines for a given text using an AI model.\n *\n * - generateHeadline - A function that generates alternative headlines.\n * - GenerateHeadlineInput - The input type for the generateHeadline function.\n * - GenerateHeadlineOutput - The return type for the generateHeadline function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateHeadlineInputSchema = z.object({\n  existingHeadline: z\n    .string()\n    .describe('The existing headline to generate alternatives for.'),\n});\nexport type GenerateHeadlineInput = z.infer<typeof GenerateHeadlineInputSchema>;\n\nconst GenerateHeadlineOutputSchema = z.object({\n  alternativeHeadlines: z\n    .array(z.string())\n    .describe('An array of alternative headlines generated by the AI.'),\n});\nexport type GenerateHeadlineOutput = z.infer<typeof GenerateHeadlineOutputSchema>;\n\nexport async function generateHeadline(input: GenerateHeadlineInput): Promise<GenerateHeadlineOutput> {\n  return generateHeadlineFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateHeadlinePrompt',\n  input: {schema: GenerateHeadlineInputSchema},\n  output: {schema: GenerateHeadlineOutputSchema},\n  prompt: `Anda adalah seorang ahli pemasaran yang bertugas untuk menghasilkan judul yang menarik dan memikat.\n\n  Hasilkan 5 alternatif judul untuk judul yang sudah ada berikut ini. Kembalikan judul dalam format array JSON berisi string.\n\n  Judul yang ada: {{{existingHeadline}}}`,\n});\n\nconst generateHeadlineFlow = ai.defineFlow(\n  {\n    name: 'generateHeadlineFlow',\n    inputSchema: GenerateHeadlineInputSchema,\n    outputSchema: GenerateHeadlineOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;;;AAGpC;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,kBAAkB,uIAAA,CAAA,IAAC,CAChB,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,sBAAsB,uIAAA,CAAA,IAAC,CACpB,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;AACd;AAGO,eAAe,iBAAiB,KAA4B;IACjE,OAAO,qBAAqB;AAC9B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2B;IAC3C,QAAQ;QAAC,QAAQ;IAA4B;IAC7C,QAAQ,CAAC;;;;wCAI6B,CAAC;AACzC;AAEA,MAAM,uBAAuB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACxC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAxBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-text-block.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Generates a block of text for a given topic using an AI model.\n *\n * - generateTextBlock - A function that generates a block of text.\n * - GenerateTextBlockInput - The input type for the generateTextBlock function.\n * - GenerateTextBlockOutput - The return type for the generateTextBlock function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateTextBlockInputSchema = z.object({\n  topic: z\n    .string()\n    .describe('The topic or prompt to generate a text block for.'),\n});\nexport type GenerateTextBlockInput = z.infer<typeof GenerateTextBlockInputSchema>;\n\nconst GenerateTextBlockOutputSchema = z.object({\n  textBlock: z\n    .string()\n    .describe('A block of text generated by the AI.'),\n});\nexport type GenerateTextBlockOutput = z.infer<typeof GenerateTextBlockOutputSchema>;\n\nexport async function generateTextBlock(input: GenerateTextBlockInput): Promise<GenerateTextBlockOutput> {\n  return generateTextBlockFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateTextBlockPrompt',\n  input: {schema: GenerateTextBlockInputSchema},\n  output: {schema: GenerateTextBlockOutputSchema},\n  prompt: `Anda adalah seorang copywriter profesional yang ahli dalam menyusun teks yang menarik dan informatif untuk halaman web.\n\n  Tulis sebuah paragraf singkat (2-3 kalimat) berdasarkan topik atau instruksi berikut. Pastikan teksnya jelas, ringkas, dan cocok untuk sebuah landing page.\n\n  Topik: {{{topic}}}`,\n});\n\nconst generateTextBlockFlow = ai.defineFlow(\n  {\n    name: 'generateTextBlockFlow',\n    inputSchema: GenerateTextBlockInputSchema,\n    outputSchema: GenerateTextBlockOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,OAAO,uIAAA,CAAA,IAAC,CACL,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,WAAW,uIAAA,CAAA,IAAC,CACT,MAAM,GACN,QAAQ,CAAC;AACd;AAGO,eAAe,kBAAkB,KAA6B;IACnE,OAAO,sBAAsB;AAC/B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA4B;IAC5C,QAAQ;QAAC,QAAQ;IAA6B;IAC9C,QAAQ,CAAC;;;;oBAIS,CAAC;AACrB;AAEA,MAAM,wBAAwB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACzC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAxBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/editor/%5BpageId%5D/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {updatePublishedPage as '6003c758e02146e26f5d698237efa5547cfa314ec9'} from 'ACTIONS_MODULE0'\nexport {generateHeadline as '40ae8fd03a54206aba42855798cdbee2b7854a41c9'} from 'ACTIONS_MODULE1'\nexport {generateTextBlock as '40efcd73a39efc784037be41094adc9ba475eb5595'} from 'ACTIONS_MODULE2'\n"],"names":[],"mappings":";AAAA;AACA;AACA","debugId":null}},
    {"offset": {"line": 475, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/auth/protected-route.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ProtectedRoute = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProtectedRoute() from the server but ProtectedRoute is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/auth/protected-route.tsx <module evaluation>\",\n    \"ProtectedRoute\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,yEACA","debugId":null}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/auth/protected-route.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ProtectedRoute = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProtectedRoute() from the server but ProtectedRoute is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/auth/protected-route.tsx\",\n    \"ProtectedRoute\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qDACA","debugId":null}},
    {"offset": {"line": 503, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/editor/editor-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EditorClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call EditorClient() from the server but EditorClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/editor/editor-client.tsx <module evaluation>\",\n    \"EditorClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yEACA","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/editor/editor-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EditorClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call EditorClient() from the server but EditorClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/editor/editor-client.tsx\",\n    \"EditorClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qDACA","debugId":null}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/editor/%5BpageId%5D/page.tsx"],"sourcesContent":["import { ProtectedRoute } from \"@/components/auth/protected-route\";\nimport { EditorClient } from \"@/components/editor/editor-client\";\n\nexport default function EditorPage({ params }: { params: { pageId: string } }) {\n\n  return (\n    <ProtectedRoute>\n      <EditorClient pageId={params.pageId} />\n    </ProtectedRoute>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS,WAAW,EAAE,MAAM,EAAkC;IAE3E,qBACE,8OAAC,gJAAA,CAAA,iBAAc;kBACb,cAAA,8OAAC,gJAAA,CAAA,eAAY;YAAC,QAAQ,OAAO,MAAM;;;;;;;;;;;AAGzC","debugId":null}}]
}