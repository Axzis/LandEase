{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/published-pages-server.ts"],"sourcesContent":["'use server';\n\nimport type { PageContent } from '@/lib/types';\nimport fs from 'fs/promises';\nimport path from 'path';\n\ninterface PublishedPageData {\n  content: PageContent;\n  pageName: string;\n  pageBackgroundColor?: string;\n}\n\nconst jsonFilePath = path.join(process.cwd(), 'src', 'lib', 'published-pages.json');\n\nasync function readPublishedPages(): Promise<Record<string, PublishedPageData>> {\n  try {\n    const fileContent = await fs.readFile(jsonFilePath, 'utf-8');\n    return JSON.parse(fileContent);\n  } catch (error) {\n    // If the file doesn't exist or is empty, return an empty object.\n    if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n      return {};\n    }\n    console.error(\"Error reading published pages file:\", error);\n    return {};\n  }\n}\n\nexport async function getPublishedPage(pageId: string): Promise<PublishedPageData | null> {\n  const pages = await readPublishedPages();\n  return pages[pageId] || null;\n}\n\nexport async function updatePublishedPage(pageId: string, data: PublishedPageData | null) {\n    const pages = await readPublishedPages();\n    \n    if (data === null) {\n      // If data is null, it means we are unpublishing, so remove the page.\n      delete pages[pageId];\n    } else {\n      // Otherwise, add or update the page data.\n      pages[pageId] = data;\n    }\n\n    try {\n        await fs.writeFile(jsonFilePath, JSON.stringify(pages, null, 2), 'utf-8');\n    } catch (error) {\n        console.error(\"Error writing to published pages file:\", error);\n        throw new Error(\"Could not update published pages file.\");\n    }\n}\n"],"names":[],"mappings":";;;;;;AAGA;AACA;;;;;;AAQA,MAAM,eAAe,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,OAAO;AAE5D,eAAe;IACb,IAAI;QACF,MAAM,cAAc,MAAM,qHAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,cAAc;QACpD,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,iEAAiE;QACjE,IAAI,AAAC,MAAgC,IAAI,KAAK,UAAU;YACtD,OAAO,CAAC;QACV;QACA,QAAQ,KAAK,CAAC,uCAAuC;QACrD,OAAO,CAAC;IACV;AACF;AAEO,eAAe,iBAAiB,MAAc;IACnD,MAAM,QAAQ,MAAM;IACpB,OAAO,KAAK,CAAC,OAAO,IAAI;AAC1B;AAEO,eAAe,oBAAoB,MAAc,EAAE,IAA8B;IACpF,MAAM,QAAQ,MAAM;IAEpB,IAAI,SAAS,MAAM;QACjB,qEAAqE;QACrE,OAAO,KAAK,CAAC,OAAO;IACtB,OAAO;QACL,0CAA0C;QAC1C,KAAK,CAAC,OAAO,GAAG;IAClB;IAEA,IAAI;QACA,MAAM,qHAAA,CAAA,UAAE,CAAC,SAAS,CAAC,cAAc,KAAK,SAAS,CAAC,OAAO,MAAM,IAAI;IACrE,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0CAA0C;QACxD,MAAM,IAAI,MAAM;IACpB;AACJ;;;IAtBsB;IAKA;;AALA,+OAAA;AAKA,+OAAA","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/p/%5BpageId%5D/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getPublishedPage as '4088b23136ac72a527be0514936834e06cc3fe52dc'} from 'ACTIONS_MODULE0'\nexport {updatePublishedPage as '6003c758e02146e26f5d698237efa5547cfa314ec9'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/editor/editor-canvas.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EditorCanvas = registerClientReference(\n    function() { throw new Error(\"Attempted to call EditorCanvas() from the server but EditorCanvas is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/editor/editor-canvas.tsx <module evaluation>\",\n    \"EditorCanvas\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yEACA","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/editor/editor-canvas.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const EditorCanvas = registerClientReference(\n    function() { throw new Error(\"Attempted to call EditorCanvas() from the server but EditorCanvas is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/editor/editor-canvas.tsx\",\n    \"EditorCanvas\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qDACA","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/p/%5BpageId%5D/page.tsx"],"sourcesContent":["\nimport { EditorCanvas } from '@/components/editor/editor-canvas';\nimport { notFound } from 'next/navigation';\nimport { getPublishedPage } from '@/lib/published-pages-server';\n\n// Ini adalah React Server Component yang membaca dari file JSON statis.\n// Ini sepenuhnya menghindari Firestore untuk melewati masalah izin.\n\nexport default async function PublicPage({ params }: { params: { pageId: string } }) {\n  // Kami mengambil data halaman dari file JSON statis, bukan dari Firebase.\n  const pageData = await getPublishedPage(params.pageId);\n\n  // Pemeriksaan 'published' bersifat implisit. Jika ada di file statis, itu dianggap dipublikasikan.\n  if (!pageData) {\n    notFound();\n  }\n  \n  return (\n    <div style={{ backgroundColor: pageData.pageBackgroundColor || '#FFFFFF' }}>\n      <EditorCanvas\n        content={pageData.content}\n        readOnly\n        pageId={params.pageId}\n        pageName={pageData.pageName}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AACA;;;;;AAKe,eAAe,WAAW,EAAE,MAAM,EAAkC;IACjF,0EAA0E;IAC1E,MAAM,WAAW,MAAM,CAAA,GAAA,0IAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,MAAM;IAErD,mGAAmG;IACnG,IAAI,CAAC,UAAU;QACb,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,qBACE,8OAAC;QAAI,OAAO;YAAE,iBAAiB,SAAS,mBAAmB,IAAI;QAAU;kBACvE,cAAA,8OAAC,gJAAA,CAAA,eAAY;YACX,SAAS,SAAS,OAAO;YACzB,QAAQ;YACR,QAAQ,OAAO,MAAM;YACrB,UAAU,SAAS,QAAQ;;;;;;;;;;;AAInC","debugId":null}}]
}