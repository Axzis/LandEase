/**
 * @fileoverview Firestore Security Rules for LandEase application.
 *
 * Core Philosophy:
 * This ruleset enforces a user-ownership model for user profiles and their associated form submissions.
 * Users can only read and write their own data.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile information.
 * - /users/{userId}/submissions/{submissionId}: Stores form submissions associated with a specific user.
 *
 * Key Security Decisions:
 * - Users can only access their own profile data and submissions.
 * - Listing of all users or submissions across users is disallowed for privacy.
 * - Data shape validation is relaxed for prototyping, focusing on ownership and relational integrity.
 *
 * Denormalization for Authorization:
 * - The `id` field within the User and Submission documents is used to match the `userId` parameter in the path, ensuring consistent ownership.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile documents.
     * @path /users/{userId}
     * @allow (create) - User with UID 'user_abc' can create their profile if userId == 'user_abc'.
     * @allow (get) - User with UID 'user_abc' can read their profile if userId == 'user_abc'.
     * @allow (update) - User with UID 'user_abc' can update their profile if userId == 'user_abc'.
     * @allow (delete) - User with UID 'user_abc' can delete their profile if userId == 'user_abc'.
     * @deny (create) - User with UID 'user_xyz' cannot create a profile with userId 'user_abc'.
     * @deny (get) - User with UID 'user_xyz' cannot read the profile of userId 'user_abc'.
     * @principle Enforces document ownership for user profiles.
     */
    match /users/{userId} {
      // Helper function to check if the user is signed in and owns the resource.
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      // Helper function to check if the user is signed in.
      function isSignedIn() {
        return request.auth != null;
      }

      // Allow the user to create their own profile.
      allow create: if isOwner(userId) && request.resource.data.id == userId;

      // Allow the user to get their own profile.
      allow get: if isOwner(userId);

      // Prevent listing of all users.
      allow list: if false;

      // Allow the user to update their own profile, enforcing immutability of the id field.
      allow update: if isOwner(userId) && request.resource.data.id == resource.data.id;

      // Allow the user to delete their own profile.
      allow delete: if isOwner(userId);
    }

    /**
     * @description Controls access to form submissions for a specific user.
     * @path /users/{userId}/submissions/{submissionId}
     * @allow (create) - User with UID 'user_abc' can create a submission under /users/user_abc/submissions.
     * @allow (get) - User with UID 'user_abc' can read a submission under /users/user_abc/submissions.
     * @allow (update) - User with UID 'user_abc' can update a submission under /users/user_abc/submissions.
     * @allow (delete) - User with UID 'user_abc' can delete a submission under /users/user_abc/submissions.
     * @deny (create) - User with UID 'user_xyz' cannot create a submission under /users/user_abc/submissions.
     * @deny (get) - User with UID 'user_xyz' cannot read a submission under /users/user_abc/submissions.
     * @principle Enforces document ownership for form submissions within a user's data tree.
     */
    match /users/{userId}/submissions/{submissionId} {
      // Helper function to check if the user is signed in and owns the resource.
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

        // Helper function to check if the user is signed in.
      function isSignedIn() {
        return request.auth != null;
      }

      // Allow the user to create a submission if they own the parent user document.
      allow create: if isOwner(userId);

      // Allow the user to get their own submission.
      allow get: if isOwner(userId);

      // Allow the user to list their submissions.
      allow list: if false;

      // Allow the user to update their own submission.
      allow update: if isOwner(userId);

      // Allow the user to delete their own submission.
      allow delete: if isOwner(userId);
    }
  }
}