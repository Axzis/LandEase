rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows read-only access to the 'pages' collection.
     * @path /pages/{pageId}
     * @allow (get, list) Any authenticated user can read any page.
     * @deny (create, update, delete) No one can create, update, or delete pages through the client.
     * @principle Allows public read access to page content while restricting write access.
     */
    match /pages/{pageId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Enforces user-ownership for user profiles.
     * @path /users/{userId}
     * @allow (create) The user can create their own profile if the userId matches their auth UID.
     * @allow (get, list) The user can only get or list if the userId matches their auth UID. Listing is implicitly denied in this version.
     * @allow (update, delete) The user can only update or delete if the userId matches their auth UID and the document exists.
     * @deny (create) The user cannot create a profile for another user (userId != request.auth.uid).
     * @deny (get, list, update, delete) Another user cannot access this profile (userId != request.auth.uid).
     * @principle Enforces document ownership for writes, restricts access to a user's own data tree.
     */
    match /users/{userId} {
      allow get: if request.auth.uid == userId;
      allow list: if false; // Listing users is not permitted.
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId && exists(resource);
      allow delete: if request.auth.uid == userId && exists(resource);
    }

    /**
     * @description Enforces user-ownership for form submissions.
     * @path /users/{userId}/submissions/{submissionId}
     * @allow (create) The user can create a submission under their profile if the userId matches their auth UID.
     * @allow (get, list) The user can only get or list their own submissions if the userId matches their auth UID.
     * @allow (update, delete) The user can only update or delete their own submissions if the userId matches their auth UID and the document exists.
     * @deny (create) The user cannot create a submission for another user (userId != request.auth.uid).
     * @deny (get, list, update, delete) Another user cannot access this submission (userId != request.auth.uid).
     * @principle Enforces document ownership for writes, restricts access to a user's own data tree.
     */
    match /users/{userId}/submissions/{submissionId} {
      allow get: if request.auth.uid == userId;
      allow list: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId && exists(resource);
      allow delete: if request.auth.uid == userId && exists(resource);
    }
  }
}