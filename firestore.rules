/**
 * @fileoverview Firestore Security Rules for LandEase Prototyping.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model for user profiles and submissions. Users can only
 * create, read, update, and delete their own data. Public listing of user profiles or submissions is disallowed.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile information.  The `userId` path segment must match the user's Firebase Auth UID.
 * - /users/{userId}/submissions/{submissionId}: Stores form submissions associated with a user.
 *
 * Key Security Decisions:
 * - Users can only access their own profile and submission data.
 * - Listing all users is disallowed.
 * - Listing submissions is only allowed for the owner.
 *
 * Denormalization for Authorization:
 *  - The `submissionId` in `/users/{userId}/submissions/{submissionId}` is used for authorization and *must* match the `id` field in the submission document.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the request is authenticated.
     * @return {boolean} True if the request is authenticated, false otherwise.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the authenticated user ID matches the provided user ID.
     * @param {string} userId The user ID to compare against.
     * @return {boolean} True if the user IDs match, false otherwise.
     */
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    /**
     * @description Checks if the authenticated user is the owner of an existing document.
     * @param {string} userId The user ID to check against.
     * @return {boolean} True if the user is the owner of the existing document.
     */
    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }

    /**
     * @description Enforces document ownership for the /users/{userId} collection.
     * @path /users/{userId}
     * @allow (create) - Authenticated user with UID 'user123' can create a document at /users/user123.
     * @deny (create) - Authenticated user with UID 'user123' cannot create a document at /users/user456.
     * @allow (get) - Authenticated user with UID 'user123' can get the document at /users/user123.
     * @deny (get) - Authenticated user with UID 'user123' cannot get the document at /users/user456.
     * @allow (update) - Authenticated user with UID 'user123' can update the document at /users/user123.
     * @deny (update) - Authenticated user with UID 'user123' cannot update the document at /users/user456.
     * @allow (delete) - Authenticated user with UID 'user123' can delete the document at /users/user123.
     * @deny (delete) - Authenticated user with UID 'user123' cannot delete the document at /users/user456.
     * @principle Enforces document ownership for writes and reads.
     */
    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isOwner(userId) && request.resource.data.id == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Enforces document ownership for the /users/{userId}/submissions/{submissionId} collection.
     * @path /users/{userId}/submissions/{submissionId}
     * @allow (create) - Authenticated user with UID 'user123' can create a submission document at /users/user123/submissions/sub123.
     * @deny (create) - Authenticated user with UID 'user123' cannot create a submission document at /users/user456/submissions/sub123.
     * @allow (get) - Authenticated user with UID 'user123' can get the document at /users/user123/submissions/sub123.
     * @deny (get) - Authenticated user with UID 'user123' cannot get the document at /users/user456/submissions/sub123.
     * @allow (update) - Authenticated user with UID 'user123' can update the document at /users/user123/submissions/sub123.
     * @deny (update) - Authenticated user with UID 'user123' cannot update the document at /users/user456/submissions/sub123.
     * @allow (delete) - Authenticated user with UID 'user123' can delete the document at /users/user123/submissions/sub123.
     * @deny (delete) - Authenticated user with UID 'user123' cannot delete the document at /users/user456/submissions/sub123.
     * @principle Enforces document ownership for writes and reads.
     */
    match /users/{userId}/submissions/{submissionId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId) && request.resource.data.id == submissionId;
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;
      allow delete: if isExistingOwner(userId);
    }
  }
}