rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Protects user profiles. Only the authenticated user can read or write their own profile.
     * @path /databases/{database}/documents/users/{userId}
     * @allow (get, create, update, delete) User with UID 'test_user' can access /users/test_user.
     * @deny (get, create, update, delete) User with UID 'test_user' cannot access /users/other_user.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      allow get: if request.auth.uid == userId;
      allow list: if false;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
      allow delete: if request.auth.uid == userId;
    }

    /**
     * @description Manages private landing pages. Only the owner can create, read, update, or delete their own pages.
     * @path /databases/{database}/documents/pages/{pageId}
     * @allow (create, get, update, delete) User with UID 'test_user' can manage /pages/test_page if page.userId == 'test_user'.
     * @deny (create, get, update, delete) User with UID 'test_user' cannot manage /pages/other_page if page.userId != 'test_user'.
     * @principle Enforces document ownership for writes.
     */
    match /pages/{pageId} {
      allow get: if request.auth.uid == resource.data.userId;
      allow list: if false;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId;
      allow delete: if request.auth.uid == resource.data.userId;
    }

    /**
     * @description Controls access to published landing pages.  Published pages are publicly readable, but only the owner can modify them.
     * @path /databases/{database}/documents/publishedPages/{pageId}
     * @allow (get, list) Anyone can read published pages.
     * @allow (create, update, delete) User with UID 'test_user' can manage /publishedPages/test_page if page.userId == 'test_user'.
     * @deny (create, update, delete) User with UID 'test_user' cannot manage /publishedPages/other_page if page.userId != 'test_user'.
     * @principle Public read access with owner-only writes.
     */
    match /publishedPages/{pageId} {
      allow get: if true;
      allow list: if true;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId;
      allow delete: if request.auth.uid == resource.data.userId;
    }

    /**
     * @description Handles form submissions for landing pages. Anyone can submit a form.
     * @path /databases/{database}/documents/pages/{pageId}/submissions/{submissionId}
     * @allow (create) Any user can submit data to this collection.
     * @deny (get, list, update, delete) No one can get, list, update, or delete any data.
     * @principle Allows public form submissions.
     */
    match /pages/{pageId}/submissions/{submissionId} {
      allow create: if true;
      allow get: if false;
      allow list: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}