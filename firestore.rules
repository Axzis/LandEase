rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any authenticated user to create their own profile. Users can only read, update, and delete their own profiles.
     * @path /users/{userId}
     * @allow (create) - User with UID 'user_abc' can create a profile with id: 'user_abc'
     * @allow (get, update, delete) - User with UID 'user_abc' can read, update, or delete the profile with id: 'user_abc'
     * @deny (create) - User with UID 'user_abc' cannot create a profile with id: 'user_xyz'.
     * @deny (get, update, delete) - User with UID 'user_xyz' cannot read, update, or delete the profile with id: 'user_abc'.
     * @principle Enforces document ownership for all operations on user profiles.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isSignedIn() && request.auth.uid == userId && resource != null;
      }

      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Allows users to manage their own form submissions.
     * @path /users/{userId}/submissions/{submissionId}
     * @allow (create) - User with UID 'user_abc' can create a submission under /users/user_abc/submissions/submission_123 with submissionId: 'submission_123'.
     * @allow (get, update, delete) - User with UID 'user_abc' can read, update, or delete submission 'submission_123' under /users/user_abc/submissions.
     * @deny (create) - User with UID 'user_abc' cannot create a submission under /users/user_xyz/submissions.
     * @deny (get, update, delete) - User with UID 'user_xyz' cannot read, update, or delete submission 'submission_123' under /users/user_abc/submissions.
     * @principle Restricts access to submissions to the owning user. Enforces that the 'id' field in the Submission document matches the {submissionId} in the path.
     */
    match /users/{userId}/submissions/{submissionId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isSignedIn() && request.auth.uid == userId && resource != null;
      }

      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }
  }
}