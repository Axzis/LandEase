// src/ai/flows/generate-headline.ts
'use server';

/**
 * @fileOverview Generates alternative headlines for a given text using an AI model.
 *
 * - generateHeadline - A function that generates alternative headlines.
 * - GenerateHeadlineInput - The input type for the generateHeadline function.
 * - GenerateHeadlineOutput - The return type for the generateHeadline function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateHeadlineInputSchema = z.object({
  existingHeadline: z
    .string()
    .describe('The existing headline to generate alternatives for.'),
});
export type GenerateHeadlineInput = z.infer<typeof GenerateHeadlineInputSchema>;

const GenerateHeadlineOutputSchema = z.object({
  alternativeHeadlines: z
    .array(z.string())
    .describe('An array of alternative headlines generated by the AI.'),
});
export type GenerateHeadlineOutput = z.infer<typeof GenerateHeadlineOutputSchema>;

export async function generateHeadline(input: GenerateHeadlineInput): Promise<GenerateHeadlineOutput> {
  return generateHeadlineFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateHeadlinePrompt',
  input: {schema: GenerateHeadlineInputSchema},
  output: {schema: GenerateHeadlineOutputSchema},
  prompt: `You are a marketing expert tasked with generating catchy and engaging headlines.

  Generate 5 alternative headlines for the following existing headline. Return the headlines as a JSON array of strings.

  Existing Headline: {{{existingHeadline}}}`,
});

const generateHeadlineFlow = ai.defineFlow(
  {
    name: 'generateHeadlineFlow',
    inputSchema: GenerateHeadlineInputSchema,
    outputSchema: GenerateHeadlineOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
